<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_import_2main_8h">
<title>Referência ao ficheiro src/import/main.h</title>
<indexterm><primary>src/import/main.h</primary></indexterm>
<para>

<para>Ficheiro de header da aplicação. </para>
 
</para>
<simplesect>
    <title>Estruturas de Dados    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_movie">Movie</link></para>

<para>Estrutura que contem um filme. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct_actor">Actor</link></para>

<para>Estrutura que contem um actor. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_import_2main_8h_1a39dc88d73783e112dbfcf98adbdbefa6">DATABASE</link>   &quot;database.db&quot;</para>

<para>Ficheiro da Base de dados. </para>
</listitem>
            <listitem><para>#define <link linkend="_import_2main_8h_1a528b4a36c14b40b6b7a96b1df6362045">YYLMAX</link>   1048576</para>

<para>Utilizado de forma a não limitar o flex. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Funções    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_import_2main_8h_1a5ef29f8119175a16aa343e3add92dd62">insertMovie</link> (<link linkend="_struct_movie">Movie</link> _movie)</para>

<para>Função de inserção de um filme. </para>
</listitem>
            <listitem><para>int <link linkend="_import_2main_8h_1ae249aa44396558ba330fcc187770eaec">DbQuery</link> (char *sql)</para>

<para>Executa uma query na base de dados. </para>
</listitem>
            <listitem><para>void <link linkend="_import_2main_8h_1a028a79b8ba7f7bac70036e9ee3c1e1d5">DbInitialize</link> ()</para>

<para>Inicializa a base de dados. </para>
</listitem>
            <listitem><para>void <link linkend="_import_2main_8h_1a2cc91acfe97f96c5ea1f426ae24c9292">insertsCommit</link> ()</para>

<para>Faz commits a cada [sql_inserts_by_commit] iterações. </para>
</listitem>
            <listitem><para>int <link linkend="_import_2main_8h_1a57fdb20d13a9132ccad1393ab0310117">DbConnect</link> ()</para>

<para>Conecta à base de dados. </para>
</listitem>
            <listitem><para>int <link linkend="_import_2main_8h_1aaf970157c29051e078655f59116e9e13">DbDisconnect</link> ()</para>

<para>Disconecta da Base de dados. </para>
</listitem>
            <listitem><para>int <link linkend="_import_2main_8h_1a8f69e113e7cc75e3e649c6372f413160">insertMovieGenre</link> (<link linkend="_struct_movie">Movie</link> _movie, char *Genre)</para>

<para>Função que insere um genero a um filme utiliza a query. </para>
</listitem>
            <listitem><para>int <link linkend="_import_2main_8h_1a3adc7aa88be7a4fdadc7e231a6e549bd">insertActorProfession</link> (<link linkend="_struct_actor">Actor</link> _actor, char *_profession)</para>

<para>Inserção de uma profissão em um actor. </para>
</listitem>
            <listitem><para>int <link linkend="_import_2main_8h_1a9d6b1225a75d45bd86f3fafad5299b42">insertActorMovie</link> (<link linkend="_struct_actor">Actor</link> _actor, char *_movie)</para>

<para>Insere um filme em que um actor tenha participado. </para>
</listitem>
            <listitem><para>int <link linkend="_import_2main_8h_1abeae562758cc409adca9d32d967dd951">insertActor</link> (<link linkend="_struct_actor">Actor</link> _actor)</para>

<para>Insere um actor na tabela actors. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Descrição detalhada</title>

<para>Ficheiro de header da aplicação. </para>

<para><formalpara><title>Autor</title>

<para><itemizedlist>
<listitem>
<para>José Moura &lt;a13742|at|alunos.ipca.pt&gt;</para>
</listitem><listitem>
<para>Óscar Silva &lt;a14383|at|alunos.ipca.pt&gt;</para>
</listitem><listitem>
<para>Daniel Filipe &lt;a17442|at|alunos.ipca.pt&gt; </para>
</listitem></itemizedlist>
</para>
</formalpara>
<formalpara><title>Data</title>

<para>17 Out 2019 </para>
</formalpara>
</para>
</section>
<section>
<title>Documentação das macros</title>
<anchor xml:id="_import_2main_8h_1a39dc88d73783e112dbfcf98adbdbefa6"/>    <section>
    <title>DATABASE</title>
<indexterm><primary>DATABASE</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>DATABASE</secondary></indexterm>
<para><computeroutput>#define DATABASE   &quot;database.db&quot;</computeroutput></para><para>

<para>Ficheiro da Base de dados. </para>
</para>
    </section><anchor xml:id="_import_2main_8h_1a528b4a36c14b40b6b7a96b1df6362045"/>    <section>
    <title>YYLMAX</title>
<indexterm><primary>YYLMAX</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>YYLMAX</secondary></indexterm>
<para><computeroutput>#define YYLMAX   1048576</computeroutput></para><para>

<para>Utilizado de forma a não limitar o flex. </para>
</para>

<para><formalpara><title>Veja também</title>

<para><link xlink:href="https://ftp.gnu.org/old-gnu/Manuals/flex-2.5.4/html_node/flex_8.html">https://ftp.gnu.org/old-gnu/Manuals/flex-2.5.4/html_node/flex_8.html</link> </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Documentação das funções</title>
<anchor xml:id="_import_2main_8h_1a57fdb20d13a9132ccad1393ab0310117"/>    <section>
    <title>DbConnect()</title>
<indexterm><primary>DbConnect</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>DbConnect</secondary></indexterm>
<para><computeroutput>int DbConnect ( )</computeroutput></para><para>

<para>Conecta à base de dados. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>1|0</para>
</formalpara>
Conecta à base de dados.</para>

<para><para><link linkend="_todo_1_todo000003">Tarefa</link> 
<para>check rc bug </para>
</para><formalpara><title>Veja também</title>

<para><link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link> </para>
</formalpara>
<formalpara><title>Retorna</title>

<para>success=1 / fail != 1 </para>
</formalpara>
</para>
<programlisting>48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
49 
50 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>;
51 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_open_v2(<link linkend="_display_2main_8h_1a39dc88d73783e112dbfcf98adbdbefa6">DATABASE</link>,&#32;&amp;<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;SQLITE_OPEN_READWRITE&#32;|&#32;SQLITE_OPEN_CREATE,&#32;NULL&#32;);
52 
53 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;!=&#32;SQLITE_OK)&#32;{
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Cannot&#32;open&#32;database:&#32;%s\n&quot;</emphasis>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_close(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>);
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
57 &#32;&#32;&#32;&#32;}
58 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
59 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1aaf970157c29051e078655f59116e9e13"/>    <section>
    <title>DbDisconnect()</title>
<indexterm><primary>DbDisconnect</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>DbDisconnect</secondary></indexterm>
<para><computeroutput>int DbDisconnect ( )</computeroutput></para><para>

<para>Disconecta da Base de dados. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>1|0</para>
</formalpara>
Disconecta da Base de dados.</para>

<para><formalpara><title>Veja também</title>

<para><link linkend="_display_2main_8c_1a57fdb20d13a9132ccad1393ab0310117">DbConnect</link> </para>
</formalpara>
<formalpara><title>Retorna</title>

<para>success=1 / fail != 1 </para>
</formalpara>
</para>
<programlisting>66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
67 &#32;&#32;&#32;&#32;sqlite3_close(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>);
68 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
69 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1a028a79b8ba7f7bac70036e9ee3c1e1d5"/>    <section>
    <title>DbInitialize()</title>
<indexterm><primary>DbInitialize</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>DbInitialize</secondary></indexterm>
<para><computeroutput>void DbInitialize ( )</computeroutput></para><para>

<para>Inicializa a base de dados. </para>
</para>
<programlisting>263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
264 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*sql&#32;=&#32;<emphasis role="stringliteral">&quot;PRAGMA&#32;main.page_size&#32;=&#32;4096;\n&quot;</emphasis>
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;PRAGMA&#32;main.cache_size=10000;\n&quot;</emphasis>
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;PRAGMA&#32;main.locking_mode=EXCLUSIVE;\n&quot;</emphasis>
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;PRAGMA&#32;main.synchronous=NORMAL;\n&quot;</emphasis>
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;PRAGMA&#32;main.journal_mode=WAL;\n&quot;</emphasis>
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;PRAGMA&#32;main.cache_size=5000;\n&quot;</emphasis>
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;BEGIN;\n&quot;</emphasis>
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;DROP&#32;TABLE&#32;IF&#32;EXISTS&#32;movies;\n&quot;</emphasis>
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;TABLE&#32;movies&#32;(\n&quot;</emphasis>
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;movie_id&#32;TEXT&#32;PRIMARY&#32;KEY,\n&quot;</emphasis>
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;titleType&#32;TEXT&#32;NOT&#32;NULL,\n&quot;</emphasis>
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;primaryTitle&#32;TEXT&#32;NOT&#32;NULL,\n&quot;</emphasis>
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;originalTitle&#32;TEXT&#32;NOT&#32;NULL,\n&quot;</emphasis>
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;isAdult&#32;INTEGER&#32;NOT&#32;NULL,\n&quot;</emphasis>
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;startYear&#32;INTEGER&#32;NOT&#32;NULL,\n&quot;</emphasis>
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;endYear&#32;INTEGER&#32;NOT&#32;NULL,\n&quot;</emphasis>
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;runtimeMinutes&#32;INTEGER&#32;NOT&#32;NULL\n&quot;</emphasis>
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;DROP&#32;TABLE&#32;IF&#32;EXISTS&#32;movies_genres;\n&quot;</emphasis>
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;TABLE&#32;movies_genres&#32;(\n&quot;</emphasis>
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;movie_id&#32;TEXT,\n&quot;</emphasis>
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;genre&#32;TEXT,\n&quot;</emphasis>
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;PRIMARY&#32;KEY&#32;(movie_id&#32;,&#32;genre)\n&quot;</emphasis>
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;DROP&#32;TABLE&#32;IF&#32;EXISTS&#32;actors;\n&quot;</emphasis>
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;TABLE&#32;actors&#32;(\n&quot;</emphasis>
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;actor_id&#32;TEXT&#32;PRIMARY&#32;KEY,\n&quot;</emphasis>
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;primaryName&#32;TEXT&#32;NOT&#32;NULL,\n&quot;</emphasis>
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;birthYear&#32;INTEGER&#32;NOT&#32;NULL,\n&quot;</emphasis>
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;deathYear&#32;INTEGER&#32;NULL\n&quot;</emphasis>
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;INDEX&#32;idx_name&#32;ON&#32;actors&#32;(primaryName);\n&quot;</emphasis>
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;DROP&#32;TABLE&#32;IF&#32;EXISTS&#32;actors_profession;\n&quot;</emphasis>
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;TABLE&#32;actors_profession&#32;(\n&quot;</emphasis>
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;actor_id&#32;TEXT,\n&quot;</emphasis>
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;profession&#32;TEXT,\n&quot;</emphasis>
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;PRIMARY&#32;KEY&#32;(actor_id&#32;,&#32;profession)\n&quot;</emphasis>
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;DROP&#32;TABLE&#32;IF&#32;EXISTS&#32;actors_movies;\n&quot;</emphasis>
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;TABLE&#32;actors_movies&#32;(\n&quot;</emphasis>
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;actor_id&#32;TEXT,\n&quot;</emphasis>
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;movie_id&#32;TEXT,\n&quot;</emphasis>
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;PRIMARY&#32;KEY&#32;(actor_id&#32;,&#32;movie_id&#32;)\n&quot;</emphasis>
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;COMMIT;&quot;</emphasis>;
313 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1ae249aa44396558ba330fcc187770eaec">DbQuery</link>(sql);
314 
315 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1ae249aa44396558ba330fcc187770eaec"/>    <section>
    <title>DbQuery()</title>
<indexterm><primary>DbQuery</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>DbQuery</secondary></indexterm>
<para><computeroutput>int DbQuery (char * sql)</computeroutput></para><para>

<para>Executa uma query na base de dados. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>sql</entry>
                                <entry>
<para>srting da query </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Veja também</title>

<para><link linkend="_import_2main_8c_1a028a79b8ba7f7bac70036e9ee3c1e1d5">DbInitialize</link> </para>
</formalpara>
<formalpara><title>Retorna</title>

<para></para>
</formalpara>
</para>
<programlisting>246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
247 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*err_msg&#32;=&#32;0;
248 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_exec(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;sql,&#32;NULL,&#32;NULL,&#32;&amp;err_msg);
249 
250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;!=&#32;SQLITE_OK)&#32;{
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;SQL&#32;error:&#32;%s\n&quot;</emphasis>,&#32;err_msg);
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(err_msg);
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_close(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>);
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(1);
255 &#32;&#32;&#32;&#32;}
256 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
257 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1abeae562758cc409adca9d32d967dd951"/>    <section>
    <title>insertActor()</title>
<indexterm><primary>insertActor</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>insertActor</secondary></indexterm>
<para><computeroutput>int insertActor (<link linkend="_struct_actor">Actor</link> _actor)</computeroutput></para><para>

<para>Insere um actor na tabela actors. </para>
</para>

<para><formalpara><title>Veja também</title>

<para><link linkend="_import_2main_8c_1aa868f8fbbbd8c00a7059a01e5bac74b4">insert_sql_actor</link> </para>

<para><link linkend="_struct_actor">Actor</link> </para>
</formalpara>

                <formalpara>
                    <title>
Parâmetros                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>_actor</entry>
                                <entry>
<para>Estrutura com um actor do tipo &lt;Actor&gt; </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>1 se Inserido </para>
</formalpara>
</para>
<programlisting>215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
216 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a80062e0b3f840e69288ba968ff00450d">nr_actors</link>++;
217 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a2cc91acfe97f96c5ea1f426ae24c9292">insertsCommit</link>();
218 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Insere&#32;na&#32;tabela&#32;actors</emphasis>
219 &#32;&#32;&#32;&#32;sqlite3_stmt&#32;*res;
220 
221 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_prepare_v2(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;<link linkend="_import_2main_8c_1aa868f8fbbbd8c00a7059a01e5bac74b4">insert_sql_actor</link>,&#32;-1,&#32;&amp;res,&#32;0);
222 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;==&#32;SQLITE_OK)&#32;{
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;1,&#32;_actor.<link linkend="_struct_actor_1a13fe43afa78ab142c9f1c3d106957c19">actor_id</link>,strlen(_actor.<link linkend="_struct_actor_1a13fe43afa78ab142c9f1c3d106957c19">actor_id</link>),&#32;NULL);
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;2,&#32;_actor.<link linkend="_struct_actor_1aed2db65d3c69a22b908b571c00540aaf">primaryName</link>,strlen(_actor.<link linkend="_struct_actor_1aed2db65d3c69a22b908b571c00540aaf">primaryName</link>),&#32;NULL);
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_int(res,&#32;3,&#32;_actor.<link linkend="_struct_actor_1a30e156f57e9505356489c0829d50bcd7">birthYear</link>);
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_int(res,&#32;4,&#32;_actor.<link linkend="_struct_actor_1a751fb66bb436f80d2128cf61125b1c2f">deathYear</link>);
227 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;execute&#32;statement:&#32;%s\n&quot;</emphasis>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
229 &#32;&#32;&#32;&#32;}
230 
231 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_step(res);
232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(SQLITE_DONE&#32;!=&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>)&#32;{
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;insert&#32;statement&#32;didn&apos;t&#32;return&#32;DONE&#32;(%i):&#32;%s\n&quot;</emphasis>,&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
234 &#32;&#32;&#32;&#32;}
235 &#32;&#32;&#32;&#32;sqlite3_finalize(res);
236 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
237 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1a9d6b1225a75d45bd86f3fafad5299b42"/>    <section>
    <title>insertActorMovie()</title>
<indexterm><primary>insertActorMovie</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>insertActorMovie</secondary></indexterm>
<para><computeroutput>int insertActorMovie (<link linkend="_struct_actor">Actor</link> _actor, char * _movie)</computeroutput></para><para>

<para>Insere um filme em que um actor tenha participado. </para>
</para>

<para><formalpara><title>Veja também</title>

<para><link linkend="_import_2main_8c_1ad95ed5b829ae58c2c7e5bcb1f1311c97">insert_sql_actors_movies</link> </para>

<para><link linkend="_struct_actor">Actor</link> </para>
</formalpara>

                <formalpara>
                    <title>
Parâmetros                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>_actor</entry>
                                <entry>
<para>Estrutura com um actor do tipo &lt;Actor&gt; </para>
</entry>
                            </row>
                            <row>
                                <entry>_movie</entry>
                                <entry>
<para>String com o id do filme </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>1 Se inserido </para>
</formalpara>
</para>
<programlisting>183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strlen(_movie)&#32;==&#32;0)
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
186 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a2cc91acfe97f96c5ea1f426ae24c9292">insertsCommit</link>();
187 &#32;&#32;&#32;&#32;sqlite3_stmt&#32;*res;
188 
189 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_prepare_v2(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;<link linkend="_import_2main_8c_1ad95ed5b829ae58c2c7e5bcb1f1311c97">insert_sql_actors_movies</link>,&#32;-1,&#32;&amp;res,&#32;0);
190 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;==&#32;SQLITE_OK)&#32;{
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;1,&#32;_actor.<link linkend="_struct_actor_1a13fe43afa78ab142c9f1c3d106957c19">actor_id</link>,strlen(_actor.<link linkend="_struct_actor_1a13fe43afa78ab142c9f1c3d106957c19">actor_id</link>),&#32;NULL);
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;2,&#32;_movie,strlen(_movie),&#32;NULL);
193 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;execute&#32;statement:&#32;%s\n&quot;</emphasis>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
195 &#32;&#32;&#32;&#32;}
196 
197 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_step(res);
198 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(SQLITE_DONE&#32;!=&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>)&#32;{
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;insert&#32;statement&#32;didn&apos;t&#32;return&#32;DONE&#32;(%i):&#32;%s\n&quot;</emphasis>,&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
200 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//printf(&quot;INSERT&#32;completed\n\n&quot;);</emphasis>
202 &#32;&#32;&#32;&#32;}
203 &#32;&#32;&#32;&#32;sqlite3_finalize(res);
204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
205 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1a3adc7aa88be7a4fdadc7e231a6e549bd"/>    <section>
    <title>insertActorProfession()</title>
<indexterm><primary>insertActorProfession</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>insertActorProfession</secondary></indexterm>
<para><computeroutput>int insertActorProfession (<link linkend="_struct_actor">Actor</link> _actor, char * _profession)</computeroutput></para><para>

<para>Inserção de uma profissão em um actor. </para>
</para>

<para><formalpara><title>Veja também</title>

<para><link linkend="_import_2main_8c_1ab01606b2adb8bbbe5e33b8af5420b580">insert_sql_actors_profession</link> </para>
</formalpara>

                <formalpara>
                    <title>
Parâmetros                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>_actor</entry>
                                <entry>
<para>Estrutura com um actor do tipo &lt;Actor&gt; </para>
</entry>
                            </row>
                            <row>
                                <entry>_profession</entry>
                                <entry>
<para>String da Profissão </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>Inteiro 1 se inseriu </para>
</formalpara>
</para>
<programlisting>150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
151 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strlen(_profession&#32;&#32;)&#32;==&#32;0)
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
153 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a2cc91acfe97f96c5ea1f426ae24c9292">insertsCommit</link>();
154 &#32;&#32;&#32;&#32;sqlite3_stmt&#32;*res;
155 
156 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_prepare_v2(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;<link linkend="_import_2main_8c_1ab01606b2adb8bbbe5e33b8af5420b580">insert_sql_actors_profession</link>,&#32;-1,&#32;&amp;res,&#32;0);
157 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;==&#32;SQLITE_OK)&#32;{
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;1,&#32;_actor.<link linkend="_struct_actor_1a13fe43afa78ab142c9f1c3d106957c19">actor_id</link>,strlen(_actor.<link linkend="_struct_actor_1a13fe43afa78ab142c9f1c3d106957c19">actor_id</link>),&#32;NULL);
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;2,&#32;_profession,strlen(_profession),&#32;NULL);
160 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;execute&#32;statement:&#32;%s\n&quot;</emphasis>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
162 &#32;&#32;&#32;&#32;}
163 
164 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_step(res);
165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(SQLITE_DONE&#32;!=&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>)&#32;{
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;insert&#32;statement&#32;didn&apos;t&#32;return&#32;DONE&#32;(%i):&#32;%s\n&quot;</emphasis>,&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>));
167 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//printf(&quot;INSERT&#32;completed\n\n&quot;);</emphasis>
169 &#32;&#32;&#32;&#32;}
170 &#32;&#32;&#32;&#32;sqlite3_finalize(res);
171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
172 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1a5ef29f8119175a16aa343e3add92dd62"/>    <section>
    <title>insertMovie()</title>
<indexterm><primary>insertMovie</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>insertMovie</secondary></indexterm>
<para><computeroutput>int insertMovie (<link linkend="_struct_movie">Movie</link> _movie)</computeroutput></para><para>

<para>Função de inserção de um filme. </para>
</para>

<para><formalpara><title>Veja também</title>

<para><link linkend="_import_2main_8c_1a5495ba20c111d6d69a9097591f50f553">insert_sql_movie</link> </para>
</formalpara>

                <formalpara>
                    <title>
Parâmetros                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>_movie</entry>
                                <entry>
<para>Estrutura de um filme do tipo <link linkend="_struct_movie">Movie</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>Inteiro 1 se Inseriu </para>
</formalpara>
</para>
<programlisting>112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
113 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1aff88a9560a13d895cd516ff0a8b24f75">nr_movies</link>++;
114 
115 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a2cc91acfe97f96c5ea1f426ae24c9292">insertsCommit</link>();
116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Insere&#32;na&#32;tabela&#32;actors</emphasis>
117 &#32;&#32;&#32;&#32;sqlite3_stmt&#32;*res;
118 &#32;&#32;&#32;&#32;<emphasis role="comment">//movie_id,titleType,primaryTitle,originalTitle,isAdult,startYear,endYear,runtimeMinutes</emphasis>
119 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_prepare_v2(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;<link linkend="_import_2main_8c_1a5495ba20c111d6d69a9097591f50f553">insert_sql_movie</link>,&#32;-1,&#32;&amp;res,&#32;0);
120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;==&#32;SQLITE_OK)&#32;{
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;1,&#32;_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>,strlen(_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>),&#32;NULL);
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;2,&#32;_movie.<link linkend="_struct_movie_1ab24997e15cb36af8a45d3bf3e3fd82e1">titleType</link>,strlen(_movie.<link linkend="_struct_movie_1ab24997e15cb36af8a45d3bf3e3fd82e1">titleType</link>),&#32;NULL);
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;3,&#32;_movie.<link linkend="_struct_movie_1aa2bc2d5a07cdabb311e429dc81e61f89">primaryTitle</link>,strlen(_movie.<link linkend="_struct_movie_1aa2bc2d5a07cdabb311e429dc81e61f89">primaryTitle</link>),&#32;NULL);
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;4,&#32;_movie.<link linkend="_struct_movie_1af56113a47530a73a2b42733ecb3404d5">originalTitle</link>,strlen(_movie.<link linkend="_struct_movie_1af56113a47530a73a2b42733ecb3404d5">originalTitle</link>),&#32;NULL);
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_int(res,&#32;5,&#32;_movie.<link linkend="_struct_movie_1a26bfe703a5cda590d946329083093742">isAdult</link>);
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_int(res,&#32;6,&#32;_movie.<link linkend="_struct_movie_1a71d3909ed695bd033e056181140d4a51">startYear</link>);
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_int(res,&#32;7,&#32;_movie.<link linkend="_struct_movie_1a59c9cee9387cb686b1a2d1ae7484f4be">endYear</link>);
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_int(res,&#32;8,&#32;_movie.<link linkend="_struct_movie_1a12ecf5cfcb55c919f64578b667ee585c">runtimeMinutes</link>);
129 
130 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;execute&#32;statement:&#32;%s&#32;-&#32;%s\n&quot;</emphasis>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>),_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>);
132 &#32;&#32;&#32;&#32;}
133 
134 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_step(res);
135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(SQLITE_DONE&#32;!=&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>)&#32;{
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;insert&#32;statement&#32;didn&apos;t&#32;return&#32;DONE&#32;(%i):&#32;%s&#32;-%s\n&quot;</emphasis>,&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>),_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>);
137 &#32;&#32;&#32;&#32;}
138 &#32;&#32;&#32;&#32;sqlite3_finalize(res);
139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
140 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1a8f69e113e7cc75e3e649c6372f413160"/>    <section>
    <title>insertMovieGenre()</title>
<indexterm><primary>insertMovieGenre</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>insertMovieGenre</secondary></indexterm>
<para><computeroutput>int insertMovieGenre (<link linkend="_struct_movie">Movie</link> _movie, char * Genre)</computeroutput></para><para>

<para>Função que insere um genero a um filme utiliza a query. </para>
</para>

<para><formalpara><title>Veja também</title>

<para><link linkend="_import_2main_8c_1aa07b787a509973479641429a30731bbb">insert_sql_movies_genres</link> </para>
</formalpara>

                <formalpara>
                    <title>
Parâmetros                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>_movie</entry>
                                <entry>
<para>Estrutura com um filme </para>
</entry>
                            </row>
                            <row>
                                <entry>Genre</entry>
                                <entry>
<para>String de um genero </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>1 se ok </para>
</formalpara>
</para>
<programlisting>79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
80 
81 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strlen(Genre)&#32;==&#32;0)
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
83 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a2cc91acfe97f96c5ea1f426ae24c9292">insertsCommit</link>();
84 &#32;&#32;&#32;&#32;sqlite3_stmt&#32;*res;
85 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_prepare_v2(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>,&#32;<link linkend="_import_2main_8c_1aa07b787a509973479641429a30731bbb">insert_sql_movies_genres</link>,&#32;-1,&#32;&amp;res,&#32;0);
86 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;==&#32;SQLITE_OK)&#32;{
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;1,&#32;_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>,strlen(_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>),&#32;NULL);
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(res,&#32;2,&#32;Genre,strlen(Genre),&#32;NULL);
89 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;execute&#32;statement:&#32;%s&#32;-&#32;%s\n&quot;</emphasis>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>),_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>);
91 &#32;&#32;&#32;&#32;}
92 
93 &#32;&#32;&#32;&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>&#32;=&#32;sqlite3_step(res);
94 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(SQLITE_DONE&#32;!=&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>)&#32;{
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;insert&#32;statement&#32;didn&apos;t&#32;return&#32;DONE&#32;(%i):&#32;%s&#32;-%s\n&quot;</emphasis>,&#32;<link linkend="_display_2main_8c_1ac6509c6fe4cbf7bde170597172f8a288">rc</link>,&#32;sqlite3_errmsg(<link linkend="_display_2main_8c_1ad6e663497d2c934364b3bcf07496b30b">db</link>),_movie.<link linkend="_struct_movie_1a51d31331e337159cefd99a0809c78e3a">movie_id</link>);
96 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//printf(&quot;INSERT&#32;completed\n\n&quot;);</emphasis>
98 &#32;&#32;&#32;&#32;}
99 &#32;&#32;&#32;&#32;sqlite3_finalize(res);
100 
101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
102 
103 }
</programlisting>    </section><anchor xml:id="_import_2main_8h_1a2cc91acfe97f96c5ea1f426ae24c9292"/>    <section>
    <title>insertsCommit()</title>
<indexterm><primary>insertsCommit</primary><secondary>main.h</secondary></indexterm>
<indexterm><primary>main.h</primary><secondary>insertsCommit</secondary></indexterm>
<para><computeroutput>void insertsCommit ( )</computeroutput></para><para>

<para>Faz commits a cada [sql_inserts_by_commit] iterações. </para>
</para>

<para><formalpara><title>Veja também</title>

<para><link linkend="_import_2main_8c_1ab41a45ffc9a06d2ec035b995cd16f1ce">sql_inserts_by_commit</link> </para>

<para><link linkend="_import_2main_8c_1a26ddb528d571985ce11a8c8e157a2cf3">sql_inserts</link> </para>
</formalpara>
</para>
<programlisting>323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
324 &#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a26ddb528d571985ce11a8c8e157a2cf3">sql_inserts</link>++;
325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_import_2main_8c_1a26ddb528d571985ce11a8c8e157a2cf3">sql_inserts</link>==1)
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Inserts\tMovies\tActors\n&quot;</emphasis>);
327 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_import_2main_8c_1a26ddb528d571985ce11a8c8e157a2cf3">sql_inserts</link>&#32;%&#32;<link linkend="_import_2main_8c_1ab41a45ffc9a06d2ec035b995cd16f1ce">sql_inserts_by_commit</link>)&#32;==&#32;0&#32;&#32;)&#32;{
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit</emphasis>
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;%d\t%d\t%d\n&quot;</emphasis>,<link linkend="_import_2main_8c_1a26ddb528d571985ce11a8c8e157a2cf3">sql_inserts</link>,<link linkend="_import_2main_8c_1aff88a9560a13d895cd516ff0a8b24f75">nr_movies</link>,<link linkend="_import_2main_8c_1a80062e0b3f840e69288ba968ff00450d">nr_actors</link>);
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a2712aeb1f7d99ae9913a61a6ed730523">sql_inserts_row</link>=0;
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1ae249aa44396558ba330fcc187770eaec">DbQuery</link>(<emphasis role="stringliteral">&quot;COMMIT&quot;</emphasis>);
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1ae249aa44396558ba330fcc187770eaec">DbQuery</link>(<emphasis role="stringliteral">&quot;BEGIN&#32;TRANSACTION&quot;</emphasis>);
333 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
334 
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_import_2main_8c_1a2712aeb1f7d99ae9913a61a6ed730523">sql_inserts_row</link>++;
336 &#32;&#32;&#32;&#32;}
337 }
</programlisting></section>
</section>
</section>
